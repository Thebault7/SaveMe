security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    #on dit comment on chiffre le mot de passe; ca peut etre aussi bcrypt
    encoders:
        App\Entity\User:
            algorithm: argon2i

    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: pseudo
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            provider: user_provider
            anonymous: ~
            form_login:
                login_path: user_login
                check_path: user_login
            logout_on_user_change: true
            # pour que la deconnexion soit geree automatiquement
            logout:
                path: logout
                target: user_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/photo, roles: ROLE_USER }
        - { path: ^/category, roles: ROLE_USER }
        - { path: ^/detail, roles: ROLE_USER }
